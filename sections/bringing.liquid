{% comment %} for about us {% endcomment %}

{% assign bringing-display = 'healthcare_hero-img.png' | asset_url | append: '?v=' | append: 'timestamp' %}
{% assign three_asset = 'air_purifier.gltf' | asset_url | append: '?v=' | append: 'timestamp' %}
{% comment %} {% assign three_asset = 'Air_02.gltf' | asset_url | append: '?v=' | append: 'timestamp' %} {% endcomment %}


{% style %}

    #shopify-section-{{section.id}} .healthcare_content{
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        gap: 24px;git 
    }
    
    #shopify-section-{{section.id}} .healthcare_content-text.bringing_content-text{
        max-width: 650px;
        width: 100%;
    }
    
    #shopify-section-{{section.id}} .healthcare_content-img{
        max-width: 650px;
        width: 100%;
    }
    #shopify-section-{{section.id}} .healthcare_content-img > img{
        max-width: 650px;
        width: 100%;
        object-fit: cover;
    }
    #shopify-section-{{section.id}} .bringing_text-dsc > span{
        font-weight: 500;
        font-family: "General Sans Semibold"
    }

    #shopify-section-{{section.id}} .bringing_content-text > h2{
        color: #232323;
        font-family: "General Sans Reguler";
        font-size: 56px;
        font-style: normal;
        font-weight: 400;
        line-height: 38px; /* 67.857% */
        letter-spacing: -0.4px;
    }
    #shopify-section-{{section.id}} .bringing_content-text > span{
        color: #232323;
        font-family: "Cormorant Garamond";
        font-size: 64px;
        font-style: italic;
        font-weight: 700;
        line-height: 38px; /* 59.375% */
        letter-spacing: -0.4px;
    }

@media (max-width: 1080px) {
    #shopify-section-{{section.id}} .healthcare_content {
        flex-direction: column;
        text-align: start;
    }
    #shopify-section-{{section.id}} .healthcare_content .threejs-container{
        height: 400px;
    }
}

@media (max-width: 768px) {
    #shopify-section-{{section.id}}.hero-healthcare {
        padding-top: 40px;
    }
    
    #shopify-section-{{section.id}} .bringing_content-text {
        margin-top: 40px;
    }

    #shopify-section-{{section.id}} .bringing_content-text > h1 {
        font-size: 36px;
        line-height: 120%;
        text-align: center;
    }

    #shopify-section-{{section.id}} .bringing_content-text > span {
        font-size: 40px;
        line-height: 120%;
        text-align: start;
    }
}

    

    {% endstyle %}
    
    <div class="container">
        <div class="healthcare_content">
            <div class="healthcare_content-img">
                <div id="threejs-container" style="width: 100%; height: 600px;"></div>
                {% comment %} <button id="rotate-btn" class="btn is-black">Rotate</button> {% endcomment %}
                {% comment %} {% if section.settings.section_image != blank %}
                    <img src="{{ section.settings.section_image | img_url: 'medium' }}" alt="" class="image-display">
                {% else %}
                    <img src="{{ bringing-display }}" alt="" class="image-display">
                {% endif %} {% endcomment %}
            </div>
            <div class="healthcare_content-text bringing_content-text">
                <h2 class="m-btm m-32">
                    {% if section.settings.section_title != blank %}
                        {{ section.settings.section_title }}
                    {% else %}
                        Bringing Innovative Science <br>
                        <span>
                            Directly to your Door
                        </span>
                    {% endif %}
                </h2>
                <p class="bringing_text-dsc">
                    {% if section.settings.section_desc != blank %}
                        {{ section.settings.section_desc }}
                    {% else %}
                        <span>Memory Air<sup>®</sup></span> is dedicated to revolutionizing brain and memory care based directly on high-quality, consistent science. That is causal, not just correlative.<br><br>
                        That means we have very, high confidence in the science. By marrying simple, easy-to-use design with this powerful science, we are committed to bringing customers real results in a space overrun with claims that just can’t be backed up.<br><br>
                        With <span>Memory Air<sup>®</sup></span>, You'll be able to track your won real results.
                    {% endif %}
                </p>
            </div>
        </div>
    </div>

    <script>
        let model, renderer, camera, scene;
        let lights = [];

        document.addEventListener("DOMContentLoaded", function () {
            const container = document.getElementById("threejs-container");
            
            if (!container) {
                return;
            }
            
            scene = new THREE.Scene();
            
            renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
            renderer.setSize(container.clientWidth, container.clientHeight);
            renderer.setClearColor(0x000000, 0);
            container.appendChild(renderer.domElement);
        
            const loader = new THREE.GLTFLoader();
            loader.load("{{ three_asset }}", function (gltf) {

                model = gltf.scene;
                model.scale.set(1, 1, 1);
                scene.add(model);

                const glbCamera = gltf.cameras[0]; 
                if (glbCamera) {
                    camera = glbCamera;
                }
                
                model.children[0].traverse((object) => {
                    if (object.isLight) {
                        lights.push(object);
                    }
                });

                if(lights.length){
                    lights[3].intensity = 0.5
                    lights[2].intensity = 0.9
                    lights[1].intensity = 0.9
                    lights[0].intensity = 3
                }

                const mainObject = model.children[0].children[0];
                if (mainObject) {
                    function animate() {
                        requestAnimationFrame(animate);
                        mainObject.rotation.y += 0.005;
                        renderer.render(scene, camera);
                    }
                    animate();
                }
                
                {% comment %} fitModelToContainer(model, camera, container, 0.85);
                renderer.render(scene, camera); {% endcomment %}
                
            }, undefined, function (error) {
                console.error("Gagal memuat model:", error);
            });
            
            $('#rotate-btn').click(()=>{
                rotateModelSmooth(model, "right");
                renderer.render(scene, camera);
            })
            
            window.addEventListener("resize", () => {
                renderer.setSize(container.clientWidth, container.clientHeight);
                fitModelToContainer(model, camera, container);
                renderer.render(scene, camera);
            });
        });

        function rotateModelSmooth(model, direction = "right", duration = 1) {
            if (!model) return;
        
            const targetRotation = model.rotation.y + (direction === "right" ? Math.PI / 2 : -Math.PI / 2);
            const startRotation = model.rotation.y;
            const startTime = performance.now();
        
            function animateRotation(time) {
                const elapsed = (time - startTime) / (duration * 1000);
                if (elapsed < 1) {
                    model.rotation.y = startRotation + (targetRotation - startRotation) * elapsed;
                    requestAnimationFrame(animateRotation);
                } else {
                    model.rotation.y = targetRotation;
                }
                renderer.render(scene, camera);
            }
        
            requestAnimationFrame(animateRotation);
        }

        function fitModelToContainer(model, camera, container, scale = 1.2) {
            const box = new THREE.Box3().setFromObject(model);
            const size = box.getSize(new THREE.Vector3());
            const center = box.getCenter(new THREE.Vector3());
    
            const aspectRatio = container.clientWidth / container.clientHeight;
            camera.aspect = aspectRatio;
            camera.updateProjectionMatrix();
    
            const maxDim = Math.max(size.x, size.y, size.z);
            const fov = camera.fov * (Math.PI / 180);
            const distance = maxDim / Math.tan(fov / 2);
    
            camera.position.set(center.x, center.y, center.z + distance * scale);
            camera.lookAt(center);
        }
    </script>
    
    
    {% schema %}
        {
            "tag": "section",
            "class": "hero-healthcare",
            "settings": [
                {
                    "type": "textarea",
                    "id": "section_title",
                    "label": "Section title",
                    "info": "Wrap italic font with <span>",
                },
                {
                    "type": "textarea",
                    "id": "section_desc",
                    "label": "Section description",
                },
                {
                    "type": "image_picker",
                    "id": "section_image",
                    "label": "Section image",
                },
            ],
            "presets": [
                {
                "name": "About us product section",
                },
            ]
        }
    {% endschema %}